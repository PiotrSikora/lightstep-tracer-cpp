// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy_carrier.proto

#ifndef PROTOBUF_envoy_5fcarrier_2eproto__INCLUDED
#define PROTOBUF_envoy_5fcarrier_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace lightstep {
namespace envoy {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_envoy_5fcarrier_2eproto();
void protobuf_AssignDesc_envoy_5fcarrier_2eproto();
void protobuf_ShutdownFile_envoy_5fcarrier_2eproto();

class CarrierPair;
class CarrierStruct;

// ===================================================================

class CarrierPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lightstep.envoy.CarrierPair) */ {
 public:
  CarrierPair();
  virtual ~CarrierPair();

  CarrierPair(const CarrierPair& from);

  inline CarrierPair& operator=(const CarrierPair& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CarrierPair& default_instance();

  void Swap(CarrierPair* other);

  // implements Message ----------------------------------------------

  inline CarrierPair* New() const { return New(NULL); }

  CarrierPair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CarrierPair& from);
  void MergeFrom(const CarrierPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CarrierPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:lightstep.envoy.CarrierPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_envoy_5fcarrier_2eproto();
  friend void protobuf_AssignDesc_envoy_5fcarrier_2eproto();
  friend void protobuf_ShutdownFile_envoy_5fcarrier_2eproto();

  void InitAsDefaultInstance();
  static CarrierPair* default_instance_;
};
// -------------------------------------------------------------------

class CarrierStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lightstep.envoy.CarrierStruct) */ {
 public:
  CarrierStruct();
  virtual ~CarrierStruct();

  CarrierStruct(const CarrierStruct& from);

  inline CarrierStruct& operator=(const CarrierStruct& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CarrierStruct& default_instance();

  void Swap(CarrierStruct* other);

  // implements Message ----------------------------------------------

  inline CarrierStruct* New() const { return New(NULL); }

  CarrierStruct* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CarrierStruct& from);
  void MergeFrom(const CarrierStruct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CarrierStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .lightstep.envoy.CarrierPair context = 1;
  int context_size() const;
  void clear_context();
  static const int kContextFieldNumber = 1;
  const ::lightstep::envoy::CarrierPair& context(int index) const;
  ::lightstep::envoy::CarrierPair* mutable_context(int index);
  ::lightstep::envoy::CarrierPair* add_context();
  ::google::protobuf::RepeatedPtrField< ::lightstep::envoy::CarrierPair >*
      mutable_context();
  const ::google::protobuf::RepeatedPtrField< ::lightstep::envoy::CarrierPair >&
      context() const;

  // @@protoc_insertion_point(class_scope:lightstep.envoy.CarrierStruct)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::lightstep::envoy::CarrierPair > context_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_envoy_5fcarrier_2eproto();
  friend void protobuf_AssignDesc_envoy_5fcarrier_2eproto();
  friend void protobuf_ShutdownFile_envoy_5fcarrier_2eproto();

  void InitAsDefaultInstance();
  static CarrierStruct* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CarrierPair

// optional string key = 1;
inline void CarrierPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CarrierPair::key() const {
  // @@protoc_insertion_point(field_get:lightstep.envoy.CarrierPair.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CarrierPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lightstep.envoy.CarrierPair.key)
}
inline void CarrierPair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lightstep.envoy.CarrierPair.key)
}
inline void CarrierPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lightstep.envoy.CarrierPair.key)
}
inline ::std::string* CarrierPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:lightstep.envoy.CarrierPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CarrierPair::release_key() {
  // @@protoc_insertion_point(field_release:lightstep.envoy.CarrierPair.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CarrierPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:lightstep.envoy.CarrierPair.key)
}

// optional string value = 2;
inline void CarrierPair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CarrierPair::value() const {
  // @@protoc_insertion_point(field_get:lightstep.envoy.CarrierPair.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CarrierPair::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lightstep.envoy.CarrierPair.value)
}
inline void CarrierPair::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lightstep.envoy.CarrierPair.value)
}
inline void CarrierPair::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lightstep.envoy.CarrierPair.value)
}
inline ::std::string* CarrierPair::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:lightstep.envoy.CarrierPair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CarrierPair::release_value() {
  // @@protoc_insertion_point(field_release:lightstep.envoy.CarrierPair.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CarrierPair::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:lightstep.envoy.CarrierPair.value)
}

// -------------------------------------------------------------------

// CarrierStruct

// repeated .lightstep.envoy.CarrierPair context = 1;
inline int CarrierStruct::context_size() const {
  return context_.size();
}
inline void CarrierStruct::clear_context() {
  context_.Clear();
}
inline const ::lightstep::envoy::CarrierPair& CarrierStruct::context(int index) const {
  // @@protoc_insertion_point(field_get:lightstep.envoy.CarrierStruct.context)
  return context_.Get(index);
}
inline ::lightstep::envoy::CarrierPair* CarrierStruct::mutable_context(int index) {
  // @@protoc_insertion_point(field_mutable:lightstep.envoy.CarrierStruct.context)
  return context_.Mutable(index);
}
inline ::lightstep::envoy::CarrierPair* CarrierStruct::add_context() {
  // @@protoc_insertion_point(field_add:lightstep.envoy.CarrierStruct.context)
  return context_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::lightstep::envoy::CarrierPair >*
CarrierStruct::mutable_context() {
  // @@protoc_insertion_point(field_mutable_list:lightstep.envoy.CarrierStruct.context)
  return &context_;
}
inline const ::google::protobuf::RepeatedPtrField< ::lightstep::envoy::CarrierPair >&
CarrierStruct::context() const {
  // @@protoc_insertion_point(field_list:lightstep.envoy.CarrierStruct.context)
  return context_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace envoy
}  // namespace lightstep

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_envoy_5fcarrier_2eproto__INCLUDED
